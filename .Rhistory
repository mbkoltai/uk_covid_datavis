p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
linetype="dashed",show.legend=ifelse(k_set>2,F,T))
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab("7-day average of admissions per MILLION population") + labs(color="") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()); p
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p
k_var
k_var
for (k_var in hosp_varnames) {
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
varname<-k_var; smooth_varname<-paste0(varname,"_smooth")
max_date<-max((lnd_hosp_age_data %>% filter(date>as.Date(k_start)))$date)
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab("7-day average of admissions per MILLION population") + labs(color="") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()); p
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_admissions_by_age",ifelse(grepl("rate",k_var),"rate","absnum"),
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
}
hosp_varnames
hosp_varnames<-c("admissions","rate_chng")
k_var
k_var<"rate_chng"
k_var<-"rate_chng"
for (k_var in hosp_varnames) {
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
varname<-k_var; smooth_varname<-paste0(varname,"_smooth")
max_date<-max((lnd_hosp_age_data %>% filter(date>as.Date(k_start)))$date)
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab("7-day average of admissions per MILLION population") + labs(color="") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()); p
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_admissions_by_age",ifelse(grepl("rate",k_var),"rate","absnum"),
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
}
for (k_var in hosp_varnames) {
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
varname<-k_var; smooth_varname<-paste0(varname,"_smooth")
max_date<-max((lnd_hosp_age_data %>% filter(date>as.Date(k_start)))$date)
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab("7-day average of admissions per MILLION population") + labs(color="") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()); p
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_admissions_by_age",ifelse(grepl("rate",k_var),"_rate","_absnum"),
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
}
for (k_var in hosp_varnames) {
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
varname<-k_var; smooth_varname<-paste0(varname,"_smooth")
max_date<-max((lnd_hosp_age_data %>% filter(date>as.Date(k_start)))$date)
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab(paste0("7-day average of admissions",ifelse(grepl("rate",k_var),"","per MILLION population"))) + labs(color="") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()); p
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_admissions_by_age",ifelse(grepl("rate",k_var),"_rate","_absnum"),
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
}
for (k_var in hosp_varnames) {
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
varname<-k_var; smooth_varname<-paste0(varname,"_smooth")
max_date<-max((lnd_hosp_age_data %>% filter(date>as.Date(k_start)))$date)
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab(paste0("Hospital admissions (daily & 7-day average)",ifelse(grepl("rate",k_var),"per MILLION population",""))) + labs(color="") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()); p
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_admissions_by_age",ifelse(grepl("rate",k_var),"_rate","_absnum"),
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
}
hosp_varnames<-c("admissions","rate_chng")
for (k_var in hosp_varnames) {
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
varname<-k_var; smooth_varname<-paste0(varname,"_smooth")
max_date<-max((lnd_hosp_age_data %>% filter(date>as.Date(k_start)))$date)
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab(paste0("Hospital admissions (daily & 7-day average)",ifelse(grepl("rate",k_var)," per MILLION population",""))) +
labs(color="") + theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank())
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_admissions_by_age",ifelse(grepl("rate",k_var),"_rate","_absnum"),
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
}
for (k_var in hosp_varnames) {
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
varname<-k_var; smooth_varname<-paste0(varname,"_smooth")
max_date<-max((lnd_hosp_age_data %>% filter(date>as.Date(k_start)))$date)
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab(paste0("Hospital admissions (daily & 7-day average)",ifelse(grepl("rate",k_var)," per MILLION population",""))) +
labs(color="") + theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank())
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
# geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
#           linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
# geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
#           linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_admissions_by_age",ifelse(grepl("rate",k_var),"_rate","_absnum"),
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
}
k_start
as.numeric(k_start)
as.numeric(factor(k_start))
k_start
k_start>as.Date("2021-01-31")
for (k_var in hosp_varnames) {
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
varname<-k_var; smooth_varname<-paste0(varname,"_smooth")
max_date<-max((lnd_hosp_age_data %>% filter(date>as.Date(k_start)))$date)
p <- ggplot(lnd_hosp_age_data %>% filter(date>as.Date(k_start)), aes(x=date)) +
# data=lnd_hosp_age_data %>% filter(date>max_date-14)
scale_x_date(expand=expansion(0.02,0),date_breaks=ifelse(k_start>as.Date("2021-01-31"),"2 weeks","1 month")) +
xlab("") + ylab(paste0("Hospital admissions (daily & 7-day average)",ifelse(grepl("rate",k_var)," per MILLION population",""))) +
labs(color="") + theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank())
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
if (k_set>=3) {
p <- p + geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),shape=21,size=3/4,show.legend=F) +
geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1)),show.legend=ifelse(k_set>2,F,T)) +
# geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1)),size=1/3,color="gray",
#           linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
theme(legend.position=NULL)
} else {
p <- p + geom_line(aes(y=get(smooth_varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),
show.legend=ifelse(k_set>2,F,T)) +
# geom_line(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),size=1/3,
#           linetype="dashed",show.legend=ifelse(k_set>2,F,T)) +
geom_point(aes(y=get(varname)*ifelse(grepl("rate",varname),10,1),color=get(colorvar)),shape=21,size=3/4,show.legend=F)
}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_admissions_by_age",ifelse(grepl("rate",k_var),"_rate","_absnum"),
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
}
plot_settings
death_url<-"https://api.coronavirus.data.gov.uk/v2/data?areaType=region&areaCode=E12000007&metric=newDeaths28DaysByDeathDateAgeDemographics&format=csv"
deaths_age<-read_csv(death_url) %>% group_by(age) %>%
mutate(rolling_rate_per_alldeaths=roll_mean(deaths,n=7,align="center",fill=NA)) %>% ungroup()
# lineplots
df_deaths <- left_join(deaths_age,ons_all_age_groups_uk_england_2019 %>% select(!c(UK,England)),by="age") %>%
rename(population=London) %>% mutate(age_uplim=as.numeric(gsub("^.*_","",age)),
age_grp=ifelse(age_uplim<=49,"00_49",ifelse(age_uplim>=49&age_uplim<=59,"50_59",age)),
age_grp=ifelse(grepl("\\+",age),age,age_grp)) %>% filter(!age %in% c("00_59","60+")) %>%
group_by(age_grp,date) %>%
summarise(rollingSum=sum(rollingSum),population=sum(population)) %>% ungroup() %>%
mutate(agegrp_no=as.numeric(factor(age_grp)),meta_age=ifelse(agegrp_no==1,1, ceiling((agegrp_no+1)/2))) %>%
group_by(date,meta_age) %>%
summarise(rollingSum=sum(rollingSum),population=sum(population),min_age=unique(age_grp)[1],
max_age=ifelse(agegrp_no==1,unique(age_grp)[1],unique(age_grp)[2])) %>%
mutate(age_grp=paste0(substr(min_age,1,3),gsub("_","",substr(max_age,nchar(max_age)-2,nchar(max_age)))),
rollingRate=1e6*rollingSum/(7*population))
# plot DEATHS in 10-yr groups
plot_settings<-expand.grid(list(c("log","linear"),c("fixed","free"),c("nofacet","facet"))) %>%
rename(y_scale=Var1,y_range=Var2,faceting=Var3) %>% filter(!(faceting=="nofacet" & y_range=="fixed"))
start_dates <- c("2020-12-01","2021-07-01")
# LOOP
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_deaths %>% filter(date>as.Date(k_start)),
aes(x=date,y=rollingRate,color=age_grp)) + geom_line(size=1.1) +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()) +
xlab("") + ylab("7-day average of deaths per million population")
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4.5,8,by=1/2),3) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks )
} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age_grp,scales="fixed") } else {
p <- p + facet_wrap(~age_grp,scales="free_y") }}
p
# save
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_deaths_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
print(paste0(filename," (",k_start,")"))
}
}
df_cases
url_cases_age="https://api.coronavirus.data.gov.uk/v2/data?areaType=region&areaCode=E12000007&metric=newCasesBySpecimenDateAgeDemographics&format=csv"
# c(1:5,6:9,10:14,15:19)
lnd_case_age_data <- read_csv(url_cases_age)
lnd_case_age_data <- lnd_case_age_data %>% filter(!age %in% c("unassigned","00_59","60+")) %>%
mutate(age_num=as.numeric(factor(age)),
age_categ=case_when(age_num<=5 ~ "0-24",age_num>=6&age_num<=10 ~ "25-49",
age_num>=11 & age_num<=15 ~ "50-74", age_num>15 ~ "75+"),
age_num=age_num-(as.numeric(factor(age_categ))-1)*5) %>%  group_by(age) %>%
mutate(rollingsum_chng=rollingSum/lag(rollingSum,n=7,order_by=date))
#
agegr_names=gsub("09","9",gsub("04","4",gsub("^0","",gsub("_","-",unique(lnd_case_age_data$age)))))
l_num=lapply(1:4, function(x) (x-1)*5+1:5); l_num[[4]]=l_num[[4]][1:4];
agegr_names=paste0(unlist(lapply(l_num, function(x)
paste0("[",paste0(agegr_names[x],collapse=","),"]"))),collapse=", ")
# PLOT CHANGE in RATES
start_date<-as.Date("2021-11-01")
ggplot(lnd_case_age_data %>% filter(date>start_date),
aes(x=date,y=(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100 # log2
geom_line() + geom_point(shape=21,fill=NA) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=1,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=c(1/4,1/2,1,1.5,2,2.5,3,4)) + #
labs(color="5-year age bands within age groups",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("ratio of weekly rolling sum to a week ago") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=15),legend.text=element_text(size=13),
legend.position="bottom",plot.caption=element_text(size=13),panel.grid.minor.y=element_blank())
# save
ggsave(paste0("london/london_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
lnd_case_age_data
df_cases<-left_join(lnd_case_age_data,ons_all_age_groups_uk_england_2019,by="age") %>%
select(!c(UK,England,areaCode,areaType,age_categ,areaName)) %>% rename(population=London) %>%
ungroup() %>% mutate(age_num=as.numeric(factor(age)),
meta_age=ifelse(ceiling(age_num/2)>8,9,ceiling(age_num/2))) %>%
group_by(date,meta_age) %>%
summarise(rollingSum=sum(rollingSum),population=sum(population),min_age=unique(age)[1],
max_age=unique(age)[length(unique(age))]) %>%
mutate(age=paste0(substr(min_age,1,3),
ifelse(is.na(max_age),"",gsub("_","",substr(max_age,nchar(max_age)-2,nchar(max_age)))) ),
age=ifelse(meta_age==max(meta_age),"80+",age),rollingRate=1e6*rollingSum/(7*population))
# plot CASE RATES in 10-yr groups
plot_settings<-expand.grid(list(c("log","linear"),c("fixed","free"),c("nofacet","facet"))) %>%
rename(y_scale=Var1,y_range=Var2,faceting=Var3) %>% filter(!(faceting=="nofacet" & y_range=="fixed"))
start_dates <- c("2020-12-01","2021-10-01")
# LOOP
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_cases %>% filter(date>as.Date(k_start)), aes(x=date,y=rollingRate,color=age)) +
geom_line(size=1.1) +   # facet_wrap(~age) + #  ,scales="free_y"
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") + theme_bw() + standard_theme + xlab("") +
ylab("7-day average of CASES per MILLION population") +
theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()) # panel.grid.minor.x=element_line(linetype="dashed"),
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-5:14); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-5,14,by=1/2)) }
p<-p+scale_y_log10(expand=expansion(0.03,0),breaks=log_breaks ) }
else { p <- p + scale_y_continuous() } # sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p
# save
print(plot_settings[k_set,])
foldername<-paste0("london/cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("london_cases_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
colorvar
