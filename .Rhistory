foldername
gsub("-","_",k_start)
k_start
foldername<-paste0("from_",gsub("-","_",as.character(k_start)),"/")
foldername
as.character(k_start)
k_start
start_dates
k_start
class(start_dates)
start_dates <- c("2020-12-01","2021-07-01")
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_cases %>% filter(date>as.Date(k_start)), aes(x=date,y=rollingRate,color=age)) +
geom_line(size=1.1) +
# facet_wrap(~age) + #  ,scales="free_y"
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") + theme_bw() + standard_theme + xlab("") +
# scale_y_log10(expand=expansion(0.03,0),breaks=sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+4),1))) ) +
# scale_y_continuous() +
ylab("7-day average of CASES per MILLION population") + theme(strip.text=element_text(size=14))
if (plot_settings[k_set,1]=="log") { p<-p+scale_y_log10(expand=expansion(0.03,0),
breaks=sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1))) )} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p
# save
print(plot_settings[k_set,])
foldername<-paste0("from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_cases_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),
".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
hosp_url<-"https://api.coronavirus.data.gov.uk/v2/data?areaType=nation&areaCode=E92000001&metric=cumAdmissionsByAge&format=csv"
eng_hosp_age_data <- read_csv(hosp_url)
eng_hosp_age_data <- eng_hosp_age_data %>% group_by(age) %>%
mutate(`new admissions`=roll_mean(value-lag(value,n=1,order_by=date),n=7,align="center",fill=NA),
rate_chng=rate-lag(rate,n=1,order_by=date),
rate_chng_smooth=roll_mean(rate_chng,n=7,align="center",fill=NA),
age=factor(age,levels=c("0_to_5", "6_to_17","18_to_64","65_to_84","85+")))
# plot
# start_dates <- c("2020-12-01","2021-07-01")
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p<-ggplot(eng_hosp_age_data %>% filter(date>as.Date(k_start)),
aes(x=date,y=rate_chng_smooth*10,color=age)) + geom_line(size=1.3) +
# facet_wrap(~age,scales="free_y") + #
scale_x_date(expand=expansion(0.02,0),date_breaks="4 week") +
# scale_y_log10(expand=expansion(0.03,0),breaks=sapply(seq(-1.5,2,1/4),function(x) round(10^x,ifelse(x<0,round(x+3),1))) ) +
# scale_y_continuous() +
ylab("7-day average of admissions per MILLION population") + theme(strip.text=element_text(size=12)) +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14)) + xlab(""); p
if (plot_settings[k_set,1]=="log") { p<-p+scale_y_log10(expand=expansion(0.03,0),
breaks=sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1))) )} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_admissions_by_age",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),
".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
# ggsave(paste0("england_admissions_by_age",ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
#               ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
#               ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),
#               "_from_dec2020.png"),width=34,height=22,units="cm")
}
}
eng_hosp_age_data %>% filter(date>as.Date(k_start))
p<-ggplot(eng_hosp_age_data %>% filter(date>as.Date(k_start)),
aes(x=date,y=rate_chng_smooth*10,color=age)) + geom_line(size=1.3) +
geom_hline(data=eng_hosp_age_data %>% filter(date<as.Date("2021-05-01")),
aes(yintercept=max(rate_chng_smooth))) +
scale_x_date(expand=expansion(0.02,0),date_breaks="4 week") +
xlab("") + ylab("7-day average of admissions per MILLION population") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14)); p
if (plot_settings[k_set,1]=="log") { p<-p+scale_y_log10(expand=expansion(0.03,0),
breaks=sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1))) )} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p; print(plot_settings[k_set,])
eng_hosp_age_data %>% filter(date<as.Date("2021-05-01"))
head(eng_hosp_age_data,5)
p
p<-ggplot(eng_hosp_age_data %>% filter(date>as.Date(k_start)),
aes(x=date,y=rate_chng_smooth*10,color=age)) + geom_line(size=1.3) +
geom_hline(data=eng_hosp_age_data %>% filter(date<as.Date("2021-05-01")),
aes(yintercept=max(rate_chng_smooth)),color="red") +
scale_x_date(expand=expansion(0.02,0),date_breaks="4 week") +
xlab("") + ylab("7-day average of admissions per MILLION population") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14)); p
if (plot_settings[k_set,1]=="log") { p<-p+scale_y_log10(expand=expansion(0.03,0),
breaks=sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1))) )} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p; print(plot_settings[k_set,])
head(eng_hosp_age_data,2)
min(eng_hosp_age_data$date)
p<-ggplot(eng_hosp_age_data %>% filter(date>as.Date(k_start)),
aes(x=date,y=rate_chng_smooth*10,color=age)) + geom_line(size=1.3) +
geom_hline(aes(yintercept=max(rate_chng_smooth)),color="red") +
scale_x_date(expand=expansion(0.02,0),date_breaks="4 week") +
xlab("") + ylab("7-day average of admissions per MILLION population") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14)); p
if (plot_settings[k_set,1]=="log") { p<-p+scale_y_log10(expand=expansion(0.03,0),
breaks=sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1))) )} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p; print(plot_settings[k_set,])
death_url<-"https://api.coronavirus.data.gov.uk/v2/data?areaType=nation&areaCode=E92000001&metric=newDeaths28DaysByDeathDateAgeDemographics&format=csv"
deaths_age<-read_csv(death_url) %>% group_by(age) %>%
mutate(rolling_rate_per_alldeaths=roll_mean(deaths,n=7,align="center",fill=NA)) %>% ungroup()
df_deaths <- left_join(deaths_age,ons_all_age_groups_uk_england_2019 %>% select(!UK),by="age") %>%
rename(population=England) %>% mutate(age_uplim=as.numeric(gsub("^.*_","",age)),
age_grp=ifelse(age_uplim<=49,"00_49",ifelse(age_uplim>=49&age_uplim<=59,"50_59",age)),
age_grp=ifelse(grepl("\\+",age),age,age_grp)) %>% filter(!age %in% c("00_59","60+")) %>%
group_by(age_grp,date) %>%
summarise(rollingSum=sum(rollingSum),population=sum(population)) %>% ungroup() %>%
mutate(agegrp_no=as.numeric(factor(age_grp)),meta_age=ifelse(agegrp_no==1,1, ceiling((agegrp_no+1)/2))) %>%
group_by(date,meta_age) %>%
summarise(rollingSum=sum(rollingSum),population=sum(population),min_age=unique(age_grp)[1],
max_age=ifelse(agegrp_no==1,unique(age_grp)[1],unique(age_grp)[2])) %>%
mutate(age_grp=paste0(substr(min_age,1,3),gsub("_","",substr(max_age,nchar(max_age)-2,nchar(max_age)))),
rollingRate=1e6*rollingSum/(7*population))
# plot DEATHS in 10-yr groups
plot_settings<-expand.grid(list(c("log","linear"),c("fixed","free"),c("nofacet","facet"))) %>%
rename(y_scale=Var1,y_range=Var2,faceting=Var3) %>% filter(!(faceting=="nofacet" & y_range=="fixed"))
plot_settings<-expand.grid(list(c("log","linear"),c("fixed","free"),c("nofacet","facet"))) %>%
rename(y_scale=Var1,y_range=Var2,faceting=Var3) %>% filter(!(faceting=="nofacet" & y_range=="fixed"))
start_dates <- c("2020-12-01","2021-07-01")
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_deaths %>% filter(date>as.Date(k_start)),
aes(x=date,y=rollingRate,color=age_grp)) + geom_line(size=1.1) +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +theme_bw() + standard_theme + xlab("") +
ylab("7-day average of deaths per million population") + theme(strip.text=element_text(size=14));
if (plot_settings[k_set,1]=="log") { p<-p+scale_y_log10(expand=expansion(0.03,0),
breaks=sapply(seq(-3,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1))) )} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age_grp,scales="fixed") } else {
p <- p + facet_wrap(~age_grp,scales="free_y") }}
p
# save
foldername<-paste0("from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_deaths_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
# ggsave(paste0("england_deaths_by_age_lineplot",
#               ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
#               ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
#               ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),
#               ".png"),width=34,height=22,units="cm")
}
}
cumul_deaths <- deaths_age %>% mutate(age_uplim=as.numeric(gsub("^.*_","",age)),
age_grp=ifelse(age_uplim<=49,"00_49",ifelse(age_uplim>=49&age_uplim<=59,"50_59",age)),
age_grp=ifelse(grepl("\\+",age),age,age_grp)) %>% filter(!age %in% c("00_59","60+")) %>%
filter(age_grp %in% c("00_49","50_59","60_64","65_69","70_74","75_79","80_84","85_89","90+")) %>%
group_by(age_grp,date) %>%
summarise(deaths=sum(deaths),
rolling_rate_per_alldeaths=sum(rolling_rate_per_alldeaths),rollingSum=sum(rollingSum)) %>%
rename(age=age_grp) %>% group_by(age) %>%
summarise(sum_deaths=sum(deaths)) %>% mutate(share_deaths=sum_deaths/sum(sum_deaths)) %>%
pivot_longer(!age) %>% mutate(age=factor(age,unique(age)),age_num=as.numeric(rev(age)))
df_cumuldeath <- cumul_deaths %>% mutate(lower_lim=gsub("00","0",gsub("_[0-9]+","+",as.character(age)))) %>%
group_by(name,age_num) %>% group_by(name) %>% arrange(age_num) %>%
mutate(cum_sum=round(cumsum(value),3), value_str=ifelse(name %in% "share_deaths",
paste0(100*round(value,3),"% (",lower_lim,": ",100*cum_sum,"%)"),as.character(value)) )
# plot
ggplot(df_cumuldeath) + geom_bar(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),fill=age),
color="black",position="stack",stat="identity") +
geom_text(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),label=value_str),size=4,position=position_stack(vjust = 0.5)) +
facet_wrap(~name,scales="free") + standard_theme + theme_bw() + xlab("") + ylab("% of all deaths") +
scale_x_continuous(expand=expansion(0.1,0)) + scale_y_continuous(expand=expansion(0.001,0)) +
theme(axis.ticks.x=element_blank(),axis.text.x=element_blank(),strip.text=element_text(size=15),
axis.text.y=element_text(size=15),axis.title.y=element_text(size=15))  # ifelse(value<1,round(value*1e2,1),value)
cumul_deaths <- deaths_age %>% mutate(age_uplim=as.numeric(gsub("^.*_","",age)),
age_grp=ifelse(age_uplim<=49,"00_49",ifelse(age_uplim>=49&age_uplim<=59,"50_59",age)),
age_grp=ifelse(grepl("\\+",age),age,age_grp)) %>% filter(!age %in% c("00_59","60+")) %>%
filter(age_grp %in% c("00_49","50_59","60_64","65_69","70_74","75_79","80_84","85_89","90+")) %>%
group_by(age_grp,date) %>%
summarise(deaths=sum(deaths),
rolling_rate_per_alldeaths=sum(rolling_rate_per_alldeaths),rollingSum=sum(rollingSum)) %>%
rename(age=age_grp) %>% group_by(age) %>%
summarise(sum_deaths=sum(deaths)) %>% mutate(share_deaths=sum_deaths/sum(sum_deaths)) %>%
pivot_longer(!age) %>% mutate(age=factor(age,unique(age)),age_num=as.numeric(rev(age)))
df_cumuldeath <- cumul_deaths %>%
mutate(lower_lim=gsub("00","0",gsub("_[0-9]+","+",as.character(age)))) %>%
group_by(name,age_num) %>% group_by(name) %>% arrange(age_num) %>%
mutate(cum_sum=round(cumsum(value),3), value_str=ifelse(name %in% "share_deaths",
paste0(100*round(value,3),"% (",lower_lim,": ",100*cum_sum,"%)"),as.character(value)) )
# plot
ggplot(df_cumuldeath) + geom_bar(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),fill=age),
color="black",position="stack",stat="identity") +
geom_text(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),label=value_str),size=4,
position=position_stack(vjust = 0.5)) +
facet_wrap(~name,scales="free") + standard_theme + theme_bw() + xlab("") + ylab("% of all deaths") +
scale_x_continuous(expand=expansion(0.1,0)) + scale_y_continuous(expand=expansion(0.001,0)) +
theme(axis.ticks.x=element_blank(),axis.text.x=element_blank(),strip.text=element_text(size=15),
axis.text.y=element_text(size=15),axis.title.y=element_text(size=15))
# ifelse(value<1,round(value*1e2,1),value)
# save
ggsave(paste0("cumul_deaths_by_age.png"),width=18,height=22,units="cm") # _ylog
cumul_deaths <- deaths_age %>% mutate(age_uplim=as.numeric(gsub("^.*_","",age)),
age_grp=ifelse(age_uplim<=49,"00_49",ifelse(age_uplim>=49&age_uplim<=59,"50_59",age)),
age_grp=ifelse(grepl("\\+",age),age,age_grp)) %>% filter(!age %in% c("00_59","60+")) %>%
filter(age_grp %in% c("00_49","50_59","60_64","65_69","70_74","75_79","80_84","85_89","90+")) %>%
group_by(age_grp,date) %>%
summarise(deaths=sum(deaths),
rolling_rate_per_alldeaths=sum(rolling_rate_per_alldeaths),rollingSum=sum(rollingSum)) %>%
rename(age=age_grp) %>% group_by(age) %>%
summarise(sum_deaths=sum(deaths)) %>% mutate(share_deaths=sum_deaths/sum(sum_deaths)) %>%
pivot_longer(!age) %>% mutate(age=factor(age,unique(age)),age_num=as.numeric(rev(age))) %>%
rename(`% of all deaths`=share_deaths,`number of deaths`=sum_deaths)
df_cumuldeath <- cumul_deaths %>%
mutate(lower_lim=gsub("00","0",gsub("_[0-9]+","+",as.character(age)))) %>%
group_by(name,age_num) %>% group_by(name) %>% arrange(age_num) %>%
mutate(cum_sum=round(cumsum(value),3), value_str=ifelse(name %in% "share_deaths",
paste0(100*round(value,3),"% (",lower_lim,": ",100*cum_sum,"%)"),as.character(value)) )
# plot
ggplot(df_cumuldeath) + geom_bar(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),fill=age),
color="black",position="stack",stat="identity") +
geom_text(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),label=value_str),size=4,
position=position_stack(vjust = 0.5)) +
facet_wrap(~name,scales="free") + standard_theme + theme_bw() + xlab("") + ylab("% of all deaths") +
scale_x_continuous(expand=expansion(0.1,0)) + scale_y_continuous(expand=expansion(0.001,0)) +
theme(axis.ticks.x=element_blank(),axis.text.x=element_blank(),strip.text=element_text(size=15),
axis.text.y=element_text(size=15),axis.title.y=element_text(size=15))
# ifelse(value<1,round(value*1e2,1),value)
# save
ggsave(paste0("cumul_deaths_by_age.png"),width=18,height=22,units="cm") # _ylog
cumul_deaths <- deaths_age %>% mutate(age_uplim=as.numeric(gsub("^.*_","",age)),
age_grp=ifelse(age_uplim<=49,"00_49",ifelse(age_uplim>=49&age_uplim<=59,"50_59",age)),
age_grp=ifelse(grepl("\\+",age),age,age_grp)) %>% filter(!age %in% c("00_59","60+")) %>%
filter(age_grp %in% c("00_49","50_59","60_64","65_69","70_74","75_79","80_84","85_89","90+")) %>%
group_by(age_grp,date) %>%
summarise(deaths=sum(deaths),
rolling_rate_per_alldeaths=sum(rolling_rate_per_alldeaths),rollingSum=sum(rollingSum)) %>%
rename(age=age_grp) %>% group_by(age) %>%
summarise(sum_deaths=sum(deaths)) %>% mutate(share_deaths=sum_deaths/sum(sum_deaths)) %>%
pivot_longer(!age) %>% mutate(age=factor(age,unique(age)),age_num=as.numeric(rev(age))) %>%
rename(`% of all deaths`=share_deaths,`number of deaths`=sum_deaths)
df_cumuldeath <- cumul_deaths %>%
mutate(lower_lim=gsub("00","0",gsub("_[0-9]+","+",as.character(age)))) %>%
group_by(name,age_num) %>% group_by(name) %>% arrange(age_num) %>%
mutate(cum_sum=round(cumsum(value),3), value_str=ifelse(name %in% "share_deaths",
paste0(100*round(value,3),"% (",lower_lim,": ",100*cum_sum,"%)"),as.character(value)) )
# plot
ggplot(df_cumuldeath) + geom_bar(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),fill=age),
color="black",position="stack",stat="identity") +
geom_text(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),label=value_str),size=4,
position=position_stack(vjust = 0.5)) +
facet_wrap(~name,scales="free") + standard_theme + theme_bw() + xlab("") + ylab("% of all deaths") +
scale_x_continuous(expand=expansion(0.1,0)) + scale_y_continuous(expand=expansion(0.001,0)) +
theme(axis.ticks.x=element_blank(),axis.text.x=element_blank(),strip.text=element_text(size=15),
axis.text.y=element_text(size=15),axis.title.y=element_text(size=15))
# ifelse(value<1,round(value*1e2,1),value)
# save
ggsave(paste0("cumul_deaths_by_age.png"),width=18,height=22,units="cm") # _ylog
df_cumuldeath <- cumul_deaths %>%
mutate(lower_lim=gsub("00","0",gsub("_[0-9]+","+",as.character(age)))) %>%
group_by(name,age_num) %>% group_by(name) %>% arrange(age_num) %>%
mutate(cum_sum=round(cumsum(value),3), value_str=ifelse(name %in% "share_deaths",
paste0(100*round(value,3),"% (",lower_lim,": ",100*cum_sum,"%)"),as.character(value)) ) %>%
rename(`% of all deaths`=share_deaths,`number of deaths`=sum_deaths)
df_cumuldeath
df_cumuldeath <- cumul_deaths %>%
mutate(lower_lim=gsub("00","0",gsub("_[0-9]+","+",as.character(age)))) %>%
group_by(name,age_num) %>% group_by(name) %>% arrange(age_num) %>%
mutate(cum_sum=round(cumsum(value),3), value_str=ifelse(name %in% "share_deaths",
paste0(100*round(value,3),"% (",lower_lim,": ",100*cum_sum,"%)"),as.character(value)) ) %>%
mutate(name=ifelse(name %in% "share_deaths","% of all deaths","number of deaths"))
df_cumuldeath
ggplot(df_cumuldeath) + geom_bar(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),fill=age),
color="black",position="stack",stat="identity") +
geom_text(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),label=value_str),size=4,
position=position_stack(vjust = 0.5)) +
facet_wrap(~name,scales="free") + standard_theme + theme_bw() + xlab("") + ylab("% of all deaths") +
scale_x_continuous(expand=expansion(0.1,0)) + scale_y_continuous(expand=expansion(0.001,0)) +
theme(axis.ticks.x=element_blank(),axis.text.x=element_blank(),strip.text=element_text(size=15),
axis.text.y=element_text(size=15),axis.title.y=element_text(size=15))
# ifelse(value<1,round(value*1e2,1),value)
# save
ggsave(paste0("cumul_deaths_by_age.png"),width=18,height=22,units="cm") # _ylog
p <- ggplot(df_plot,aes(x=date,y=value)) +
geom_line(data=df_plot %>% filter(value_type %in% "smoothed"),aes(group=dose) ) +
geom_point(data=df_plot %>% filter(!(value_type %in% "smoothed") & as.numeric(date) %% 4), aes(color=dose),
show.legend=F,shape=21,size=1) +
facet_wrap(~age,scales="free_y") + scale_size(range=c(0,1)) +
scale_x_date(date_breaks="month",expand=expansion(0.01,0)) + # scale_y_log10(limits=c(0.03,10)) +
theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=1/2)) +
xlab("") + ylab("% of age group") + labs(color="") +
# ggtitle("7-day average of daily vaccinations as % age group") +
theme(strip.text=element_text(size=16),plot.title=element_text(size=18),legend.text=element_text(size=16),
axis.text.y=element_text(size=13),axis.title.y=element_text(size=16))
# save
# ggsave(paste0("vaccine_by_age_rate.png"),width=45,height=30,units="cm")
p_log<-p + scale_y_log10(limits=c(0.03,10)); p_log
ggsave(paste0("vaccine_by_age_rate_log.png"),width=45,height=25,units="cm")
p; ggsave(paste0("vaccine_by_age_rate_lin.png"),width=45,height=25,units="cm")
p <- ggplot(df_plot,aes(x=date,y=value)) +
geom_line(data=df_plot %>% filter(value_type %in% "smoothed"),aes(group=dose) ) +
geom_point(data=df_plot %>% filter(!(value_type %in% "smoothed") & as.numeric(date) %% 4), aes(color=dose),
show.legend=F,shape=21,size=1) +
facet_wrap(~age,scales="free_y") + scale_size(range=c(0,1)) +
scale_x_date(date_breaks="month",expand=expansion(0.01,0)) + # scale_y_log10(limits=c(0.03,10)) +
theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=1/2)) +
xlab("") + ylab("% of age group") + labs(color="") +
# ggtitle("7-day average of daily vaccinations as % age group") +
theme(strip.text=element_text(size=16),plot.title=element_text(size=18),legend.text=element_text(size=16),
axis.text.y=element_text(size=13),axis.title.y=element_text(size=18))
# save
# ggsave(paste0("vaccine_by_age_rate.png"),width=45,height=30,units="cm")
p_log<-p + scale_y_log10(limits=c(0.03,10)); p_log
ggsave(paste0("vaccine_by_age_rate_log.png"),width=45,height=25,units="cm")
p; ggsave(paste0("vaccine_by_age_rate_lin.png"),width=45,height=25,units="cm")
zz="ssdsds
zz"
zz
unlink("Rplots.pdf")
sirmod=function(t, y, parms) {
# Pull state variables from y vector
S=y[1];  I=y[2]; R=y[3]
# parameter values from parms vector
beta=parms["beta"]; mu=parms["mu"]; gamma=parms["gamma"]; N=parms["N"]
# Define equations
dS=mu - beta*S*I/N - mu*S
dI=beta*S*I/N - (mu + gamma)*I
dR=gamma*I - mu*R
res=c(dS, dI, dR)
# Return list of gradients
list(res) }
# params
times=seq(0,26,by=1/10)
parms=c(mu=1, N=1, beta=2, gamma=1/2)
start=c(S=99.9/100, I=0.1/100, R=0)
# integrate
out=as.data.frame(ode(y=start, times=times, func=sirmod, parms=parms))
library(nleqslv); library(deSolve)
sirmod=function(t, y, parms) {
# Pull state variables from y vector
S=y[1];  I=y[2]; R=y[3]
# parameter values from parms vector
beta=parms["beta"]; mu=parms["mu"]; gamma=parms["gamma"]; N=parms["N"]
# Define equations
dS=mu - beta*S*I/N - mu*S
dI=beta*S*I/N - (mu + gamma)*I
dR=gamma*I - mu*R
res=c(dS, dI, dR)
# Return list of gradients
list(res) }
# params
times=seq(0,26,by=1/10)
parms=c(mu=1, N=1, beta=2, gamma=1/2)
start=c(S=99.9/100, I=0.1/100, R=0)
# integrate
out=as.data.frame(ode(y=start, times=times, func=sirmod, parms=parms))
head(round(out, 3))
ggplot(out %>% pivot_longer(!time)) + geom_line(aes(x=time,y=value,color=name)) + theme_bw() + standard_theme
tail(round(out, 3))
tail(round(out,3),3)
tail(round(out,3),3)
parms["mu"]
parms=c(mu=1, N=1, beta=2, gamma=1/2,delta=1)
(parms["mu"]/parms["delta"] - (parms["gamma"]+parms["delta"])/parms["beta"])
(parms["mu"]/parms["delta"] - (parms["gamma"]+parms["delta"])/parms["beta"])/(1+parms["gamma"]/parms["delta"])
tail(round(out,3),3)
start_date<-as.Date("2021-09-01")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=(rollingsum_chng-1)*100,color=factor(age_num),group=age_num)) +
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=(-4:6)*25) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("weekly sum % change") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=10),axis.text.y=element_text(size=10),
strip.text=element_text(size=14),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=10))
getwd()
setwd("uk_covid_datavis/")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
df_cumuldeath <- cumul_deaths %>%
mutate(lower_lim=gsub("00","0",gsub("_[0-9]+","+",as.character(age)))) %>%
group_by(name,age_num) %>% group_by(name) %>% arrange(age_num) %>%
mutate(cum_sum=round(cumsum(value),3), value_str=ifelse(name %in% "share_deaths",
paste0(100*round(value,3),"% (",lower_lim,": ",100*cum_sum,"%)"),
as.character(round(value/1e3,1))) ) %>%
mutate(name=ifelse(name %in% "share_deaths","% of all deaths","number of deaths"))
ggplot(df_cumuldeath) + geom_bar(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),fill=age),
color="black",position="stack",stat="identity") +
geom_text(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),label=value_str),size=4,
position=position_stack(vjust = 0.5)) +
facet_wrap(~name,scales="free") + standard_theme + theme_bw() + xlab("") + ylab("% of all deaths") +
scale_x_continuous(expand=expansion(0.1,0)) + scale_y_continuous(expand=expansion(0.001,0)) +
theme(axis.ticks.x=element_blank(),axis.text.x=element_blank(),strip.text=element_text(size=15),
axis.text.y=element_text(size=15),axis.title.y=element_text(size=15))
df_cumuldeath <- cumul_deaths %>%
mutate(lower_lim=gsub("00","0",gsub("_[0-9]+","+",as.character(age)))) %>%
group_by(name,age_num) %>% group_by(name) %>% arrange(age_num) %>%
mutate(cum_sum=round(cumsum(value),3), value_str=ifelse(name %in% "share_deaths",
paste0(100*round(value,3),"% (",lower_lim,": ",100*cum_sum,"%)"),
paste0(round(value/1e3,1),"e3")) ) %>%
mutate(name=ifelse(name %in% "share_deaths","% of all deaths","number of deaths"))
# plot
ggplot(df_cumuldeath) + geom_bar(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),fill=age),
color="black",position="stack",stat="identity") +
geom_text(aes(x=1,y=ifelse(value<1,round(value*1e2,1),value),label=value_str),size=4,
position=position_stack(vjust = 0.5)) +
facet_wrap(~name,scales="free") + standard_theme + theme_bw() + xlab("") + ylab("% of all deaths") +
scale_x_continuous(expand=expansion(0.1,0)) + scale_y_continuous(expand=expansion(0.001,0)) +
theme(axis.ticks.x=element_blank(),axis.text.x=element_blank(),strip.text=element_text(size=15),
axis.text.y=element_text(size=15),axis.title.y=element_text(size=15))
# ifelse(value<1,round(value*1e2,1),value)
ggsave(paste0("cumul_deaths_by_age.png"),width=18,height=22,units="cm") # _ylog
k
p<-eng_case_age_data %>% mutate(ten_year_band_num=round(as.numeric(strsplit(age,"_")[[1]][2])/10)*10,
ten_year_band_num=ifelse(is.na(ten_year_band_num),90,ten_year_band_num),
ten_year_band=ifelse(ten_year_band_num-5<0,"<5",paste0(ten_year_band_num-5,"_",ten_year_band_num+4))) %>%
mutate(ten_year_band=ifelse(is.na(ten_year_band)|grepl("85",ten_year_band),">85",ten_year_band)) %>%
group_by(date,ten_year_band) %>%
summarise(rollingSum=sum(rollingSum)/7,ten_year_band_num=unique(ten_year_band_num)/10) %>%
mutate(ten_year_band_num=ifelse(is.na(ten_year_band_num),9,ten_year_band_num)+1,
age_meta=round((ten_year_band_num+0.9)/2)) %>% ungroup() %>% arrange(date,ten_year_band_num) %>%
mutate(ten_year_band=factor(ten_year_band,levels=unique(ten_year_band))) %>% group_by(age_meta,date) %>%
mutate(order_within=c("lower","higher")[row_number()],
age_meta_name=paste0("[",paste0(ten_year_band,collapse=", "),"]",sep="")) %>%
filter(date>as.Date("2021-08-01")) %>%
ggplot() + geom_line(aes(x=date,y=rollingSum,color=order_within),size=1.1) +
facet_wrap(~age_meta_name,nrow=2,scales=ifelse(k==1,"free_y","fixed")) +
scale_x_date(expand=expansion(0.02,0),breaks="2 week") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=17),legend.title=element_blank(),legend.text=element_text(size=17),
axis.title.y=element_text(size=19),plot.caption=element_text(size=12)) + xlab("") + ylab("cases")
if (k==1){p<-p + scale_y_log10(breaks=sapply(10^seq(1,4,by=1/4),
function(x) round(x,max(3-round(log(x)),0))) )} else {
p<-p+scale_y_continuous(breaks=(0:8)*2e3) }
p
k=1
p<-eng_case_age_data %>% mutate(ten_year_band_num=round(as.numeric(strsplit(age,"_")[[1]][2])/10)*10,
ten_year_band_num=ifelse(is.na(ten_year_band_num),90,ten_year_band_num),
ten_year_band=ifelse(ten_year_band_num-5<0,"<5",paste0(ten_year_band_num-5,"_",ten_year_band_num+4))) %>%
mutate(ten_year_band=ifelse(is.na(ten_year_band)|grepl("85",ten_year_band),">85",ten_year_band)) %>%
group_by(date,ten_year_band) %>%
summarise(rollingSum=sum(rollingSum)/7,ten_year_band_num=unique(ten_year_band_num)/10) %>%
mutate(ten_year_band_num=ifelse(is.na(ten_year_band_num),9,ten_year_band_num)+1,
age_meta=round((ten_year_band_num+0.9)/2)) %>% ungroup() %>% arrange(date,ten_year_band_num) %>%
mutate(ten_year_band=factor(ten_year_band,levels=unique(ten_year_band))) %>% group_by(age_meta,date) %>%
mutate(order_within=c("lower","higher")[row_number()],
age_meta_name=paste0("[",paste0(ten_year_band,collapse=", "),"]",sep="")) %>%
filter(date>as.Date("2021-08-01")) %>%
ggplot() + geom_line(aes(x=date,y=rollingSum,color=order_within),size=1.1) +
facet_wrap(~age_meta_name,nrow=2,scales=ifelse(k==1,"free_y","fixed")) +
scale_x_date(expand=expansion(0.02,0),breaks="2 week") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=17),legend.title=element_blank(),legend.text=element_text(size=17),
axis.title.y=element_text(size=19),plot.caption=element_text(size=12)) + xlab("") + ylab("cases")
if (k==1){p<-p + scale_y_log10(breaks=sapply(10^seq(1,4,by=1/4),
function(x) round(x,max(3-round(log(x)),0))) )} else {
p<-p+scale_y_continuous(breaks=(0:8)*2e3) }
p
for (k in 1:2){
p<-eng_case_age_data %>% mutate(ten_year_band_num=round(as.numeric(strsplit(age,"_")[[1]][2])/10)*10,
ten_year_band_num=ifelse(is.na(ten_year_band_num),90,ten_year_band_num),
ten_year_band=ifelse(ten_year_band_num-5<0,"<5",paste0(ten_year_band_num-5,"_",ten_year_band_num+4))) %>%
mutate(ten_year_band=ifelse(is.na(ten_year_band)|grepl("85",ten_year_band),">85",ten_year_band)) %>%
group_by(date,ten_year_band) %>%
summarise(rollingSum=sum(rollingSum)/7,ten_year_band_num=unique(ten_year_band_num)/10) %>%
mutate(ten_year_band_num=ifelse(is.na(ten_year_band_num),9,ten_year_band_num)+1,
age_meta=round((ten_year_band_num+0.9)/2)) %>% ungroup() %>% arrange(date,ten_year_band_num) %>%
mutate(ten_year_band=factor(ten_year_band,levels=unique(ten_year_band))) %>% group_by(age_meta,date) %>%
mutate(order_within=c("lower","higher")[row_number()],
age_meta_name=paste0("[",paste0(ten_year_band,collapse=", "),"]",sep="")) %>%
filter(date>as.Date("2021-08-01")) %>%
ggplot() + geom_line(aes(x=date,y=rollingSum,color=order_within),size=1.1) +
facet_wrap(~age_meta_name,nrow=2,scales=ifelse(k==1,"free_y","fixed")) +
scale_x_date(expand=expansion(0.02,0),breaks="2 week") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=17),legend.title=element_blank(),legend.text=element_text(size=17),
axis.title.y=element_text(size=19),plot.caption=element_text(size=12)) + xlab("") + ylab("cases")
if (k==1){p<-p + scale_y_log10(breaks=sapply(10^seq(1,4,by=1/4),
function(x) round(x,max(3-round(log(x)),0))) )} else {
p<-p+scale_y_continuous(breaks=(0:8)*2e3) }
p
# SAVE #
ggsave(paste0("england_cases_number_10_yr_agebands",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log",""),
".png",collapse=""),width=36,height=22,units="cm")
}
ONS_2019_population_estim
vaccine_folder<-"vaccine_data/"; if (!dir.exists(vaccine_folder)) {dir.create(vaccine_folder)}
vaccine_folder
