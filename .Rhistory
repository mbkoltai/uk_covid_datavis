p <- p + facet_wrap(~age,scales="free_y") }}
p
# save
print(plot_settings[k_set,])
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_cases_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_cases %>% filter(date>as.Date(k_start)), aes(x=date,y=rollingRate,color=age)) +
geom_line(size=1.1) +   # facet_wrap(~age) + #  ,scales="free_y"
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") + theme_bw() + standard_theme + xlab("") +
ylab("7-day average of CASES per MILLION population") +
theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()) # panel.grid.minor.x=element_line(linetype="dashed"),
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-5:14); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-5,14,by=1/2)) }
p<-p+scale_y_log10(expand=expansion(0.03,0),breaks=log_breaks ) }
else { p <- p + scale_y_continuous() } # sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p
# save
print(plot_settings[k_set,])
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_cases_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
hosp_url<-"https://api.coronavirus.data.gov.uk/v2/data?areaType=nation&areaCode=E92000001&metric=cumAdmissionsByAge&format=csv"
eng_hosp_age_data <- read_csv(hosp_url) %>% group_by(age) %>%
mutate(`new admissions`=roll_mean(value-lag(value,n=1,order_by=date),n=7,align="center",fill=NA),
rate_chng=rate-lag(rate,n=1,order_by=date),
rate_chng_smooth=roll_mean(rate_chng,n=7,align="center",fill=NA),
age=factor(age,levels=c("0_to_5", "6_to_17","18_to_64","65_to_84","85+")))
# plot
# start_dates <- c("2020-12-01","2021-07-01")
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p<-ggplot(eng_hosp_age_data %>% filter(date>as.Date(k_start)),
aes(x=date,y=rate_chng_smooth*10,color=age)) + geom_line(size=1.3) +
# geom_hline(aes(yintercept=max(rate_chng_smooth)),color="red") +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab("7-day average of admissions per MILLION population") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()); p
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2)) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_admissions_by_age",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p<-ggplot(eng_hosp_age_data %>% filter(date>as.Date(k_start)),
aes(x=date,y=rate_chng_smooth*10,color=age)) + geom_line(size=1.3) +
# geom_hline(aes(yintercept=max(rate_chng_smooth)),color="red") +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
xlab("") + ylab("7-day average of admissions per MILLION population") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()); p
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-4:10); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4,10,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks) } else {
p <- p + scale_y_continuous() }
# sapply(seq(-2,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age,scales="fixed") } else {
p <- p + facet_wrap(~age,scales="free_y") }}
p; print(plot_settings[k_set,])
# SAVE
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_admissions_by_age",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""), ".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
}
}
death_url<-"https://api.coronavirus.data.gov.uk/v2/data?areaType=nation&areaCode=E92000001&metric=newDeaths28DaysByDeathDateAgeDemographics&format=csv"
deaths_age<-read_csv(death_url) %>% group_by(age) %>%
mutate(rolling_rate_per_alldeaths=roll_mean(deaths,n=7,align="center",fill=NA)) %>% ungroup()
# lineplots
df_deaths <- left_join(deaths_age,ons_all_age_groups_uk_england_2019 %>% select(!UK),by="age") %>%
rename(population=England) %>% mutate(age_uplim=as.numeric(gsub("^.*_","",age)),
age_grp=ifelse(age_uplim<=49,"00_49",ifelse(age_uplim>=49&age_uplim<=59,"50_59",age)),
age_grp=ifelse(grepl("\\+",age),age,age_grp)) %>% filter(!age %in% c("00_59","60+")) %>%
group_by(age_grp,date) %>%
summarise(rollingSum=sum(rollingSum),population=sum(population)) %>% ungroup() %>%
mutate(agegrp_no=as.numeric(factor(age_grp)),meta_age=ifelse(agegrp_no==1,1, ceiling((agegrp_no+1)/2))) %>%
group_by(date,meta_age) %>%
summarise(rollingSum=sum(rollingSum),population=sum(population),min_age=unique(age_grp)[1],
max_age=ifelse(agegrp_no==1,unique(age_grp)[1],unique(age_grp)[2])) %>%
mutate(age_grp=paste0(substr(min_age,1,3),gsub("_","",substr(max_age,nchar(max_age)-2,nchar(max_age)))),
rollingRate=1e6*rollingSum/(7*population))
# plot DEATHS in 10-yr groups
plot_settings<-expand.grid(list(c("log","linear"),c("fixed","free"),c("nofacet","facet"))) %>%
rename(y_scale=Var1,y_range=Var2,faceting=Var3) %>% filter(!(faceting=="nofacet" & y_range=="fixed"))
start_dates <- c("2020-12-01","2021-07-01")
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_deaths %>% filter(date>as.Date(k_start)),
aes(x=date,y=rollingRate,color=age_grp)) + geom_line(size=1.1) +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()) +
xlab("") + ylab("7-day average of deaths per million population")
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-3,8,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0),
breaks=2^c(-3:8) ) } else { # sapply(seq(-3,4,1/2),function(x) round(10^x,ifelse(x<0,round(x+3),1)))
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age_grp,scales="fixed") } else {
p <- p + facet_wrap(~age_grp,scales="free_y") }}
p
# save
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_deaths_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
print(filename)
}
}
plot_settings
log_breaks
k_set
2^(-3:8)
log_breaks
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-3,8,by=1/2),1) }
log_breaks
k_set
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_deaths %>% filter(date>as.Date(k_start)),
aes(x=date,y=rollingRate,color=age_grp)) + geom_line(size=1.1) +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()) +
xlab("") + ylab("7-day average of deaths per million population")
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-3,8,by=1/2),1) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks )
} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age_grp,scales="fixed") } else {
p <- p + facet_wrap(~age_grp,scales="free_y") }}
p
# save
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_deaths_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
print(filename)
}
}
log_breaks
k_set
log_breaks
k_set
plot_settings
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-3,8,by=1/2),2) }
log_breaks
k_set=5
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-3,8,by=1/2),2) }
log_breaks
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_deaths %>% filter(date>as.Date(k_start)),
aes(x=date,y=rollingRate,color=age_grp)) + geom_line(size=1.1) +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()) +
xlab("") + ylab("7-day average of deaths per million population")
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-3.5,8,by=1/2),2) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks )
} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age_grp,scales="fixed") } else {
p <- p + facet_wrap(~age_grp,scales="free_y") }}
p
# save
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_deaths_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
print(filename)
}
}
print(paste0(filename,k_start))
print(paste0(filename," (",k_start),")")
print(paste0(filename," (",k_start,")"))
for (k_start in start_dates) {
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_deaths %>% filter(date>as.Date(k_start)),
aes(x=date,y=rollingRate,color=age_grp)) + geom_line(size=1.1) +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()) +
xlab("") + ylab("7-day average of deaths per million population")
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4.5,8,by=1/2),2) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks )
} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age_grp,scales="fixed") } else {
p <- p + facet_wrap(~age_grp,scales="free_y") }}
p
# save
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_deaths_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
print(paste0(filename," (",k_start,")"))
}
}
k_start
for (k_set in 1:nrow(plot_settings)) {
p <- ggplot(df_deaths %>% filter(date>as.Date(k_start)),
aes(x=date,y=rollingRate,color=age_grp)) + geom_line(size=1.1) +
scale_x_date(expand=expansion(0.02,0),date_breaks="1 month") +
theme_bw() + standard_theme + theme(strip.text=element_text(size=14),panel.grid.minor.y=element_blank()) +
xlab("") + ylab("7-day average of deaths per million population")
if (plot_settings[k_set,1]=="log") {
log_breaks <- 2^(-3:8); if (k_set==5 & k_start>ymd("2021-01-01")) {log_breaks=round(2^seq(-4.5,8,by=1/2),3) }
p<-p+scale_y_log10(expand=expansion(0.03,0), breaks=log_breaks )
} else {
p <- p + scale_y_continuous() }
if (plot_settings[k_set,3]=="facet"){
if (plot_settings[k_set,2]=="fixed") { p<-p+facet_wrap(~age_grp,scales="fixed") } else {
p <- p + facet_wrap(~age_grp,scales="free_y") }}
p
# save
foldername<-paste0("cases_hosp_deaths_from_",gsub("-","_",as.character(k_start)),"/")
if (!dir.exists(foldername)) {dir.create(foldername)}
filename<-paste0("england_deaths_by_age_lineplot",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log","_linear"),
ifelse(class(p$facet)[1]=="FacetNull","_nofacet",""),
ifelse(plot_settings[k_set,2]=="fixed","_yfixed",""),".png")
ggsave(paste0(foldername,filename),width=34,height=22,units="cm")
print(paste0(filename," (",k_start,")"))
}
for (k in 1:2){
p<-eng_case_age_data %>% mutate(ten_year_band_num=round(as.numeric(strsplit(age,"_")[[1]][2])/10)*10,
ten_year_band_num=ifelse(is.na(ten_year_band_num),90,ten_year_band_num),
ten_year_band=ifelse(ten_year_band_num-5<0,"<5",paste0(ten_year_band_num-5,"_",ten_year_band_num+4))) %>%
mutate(ten_year_band=ifelse(is.na(ten_year_band)|grepl("85",ten_year_band),">85",ten_year_band)) %>%
group_by(date,ten_year_band) %>%
summarise(rollingSum=sum(rollingSum)/7,ten_year_band_num=unique(ten_year_band_num)/10) %>%
mutate(ten_year_band_num=ifelse(is.na(ten_year_band_num),9,ten_year_band_num)+1,
age_meta=round((ten_year_band_num+0.9)/2)) %>% ungroup() %>% arrange(date,ten_year_band_num) %>%
mutate(ten_year_band=factor(ten_year_band,levels=unique(ten_year_band))) %>% group_by(age_meta,date) %>%
mutate(order_within=c("lower","higher")[row_number()],
age_meta_name=paste0("[",paste0(ten_year_band,collapse=", "),"]",sep="")) %>%
filter(date>as.Date("2021-08-01")) %>%
ggplot() + geom_line(aes(x=date,y=rollingSum,color=order_within),size=1.1) +
facet_wrap(~age_meta_name,nrow=2,scales=ifelse(k==1,"free_y","fixed")) +
scale_x_date(expand=expansion(0.02,0),breaks="2 week") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=17),legend.title=element_blank(),legend.text=element_text(size=17),
axis.title.y=element_text(size=19),plot.caption=element_text(size=12),panel.grid.minor.y=element_blank()) +
xlab("") + ylab("cases")
if (k==1){p <- p + scale_y_log10(breaks=round(2^seq(3,14,by=1/2))) } else {
p<-p+scale_y_continuous(breaks=(0:12)*2e3) } # sapply(10^seq(1,4,by=1/4),function(x) round(x,max(3-round(log(x)),0)))
p
# SAVE #
ggsave(paste0("england_cases_number_10_yr_agebands",
ifelse(grepl("log",p$scales$scales[[2]]$trans$name),"_log",""),
".png",collapse=""),width=36,height=22,units="cm")
}
start_date<-as.Date("2021-09-01")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=rollingsum_chng,color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=1,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=(-4:10)*25) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("weekly sum ratio vs last week") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=10),panel.grid.minor.y=element_blank())
start_date<-as.Date("2021-09-01")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=rollingsum_chng,color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=1,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_log10(breaks=2^(-3:2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("[7-day rolling sum(t)]/[7-day rolling sum(t-7days)]") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=10),panel.grid.minor.y=element_blank())
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=rollingsum_chng,color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=1,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_log10(breaks=2^seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("[7-day rolling sum(t)]/[7-day rolling sum(t-7days)]") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=10),panel.grid.minor.y=element_blank())
start_date<-as.Date("2021-09-01")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_log10(breaks=seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("log2([7-day rolling sum(t)]/[7-day rolling sum(t-7days)])") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=10),panel.grid.minor.y=element_blank())
# save
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("log2([7-day rolling sum(t)]/[7-day rolling sum(t-7days)])") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=10),panel.grid.minor.y=element_blank())
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago])") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=10),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=10),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
paste0("agegroups: ",agegr_names)
start_date<-as.Date("2021-09-01")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",agegr_names)) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=12),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
agegr_names
gsub(",","\n",agegr_names)
gsub("] ,",]"\n",agegr_names)
gsub("\], ",\]"\n",agegr_names)
gsub("\\], ",\\]"\n",agegr_names)
gsub("\\], ",\\]\n",agegr_names)
gsub("\\]," , "\\]\n" ,agegr_names)
gsub("\\], " , "\\]\n" ,agegr_names)
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=12),legend.text=element_text(size=12),
legend.position="bottom",plot.caption=element_text(size=12),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=15),legend.text=element_text(size=13),
legend.position="bottom",plot.caption=element_text(size=12),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=seq(-3,2,by=1/2)) +
labs(color="5y age band within age group",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=15),legend.text=element_text(size=13),
legend.position="bottom",plot.caption=element_text(size=13),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=log2(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=seq(-3,2,by=1/2)) +
labs(color="5-year age bands within age groups",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=15),legend.text=element_text(size=13),
legend.position="bottom",plot.caption=element_text(size=13),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100 # log2
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=0,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=c(1/4,1/2,1,2,4)) + #
labs(color="5-year age bands within age groups",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=15),legend.text=element_text(size=13),
legend.position="bottom",plot.caption=element_text(size=13),panel.grid.minor.y=element_blank())
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
start_date<-as.Date("2021-09-01")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100 # log2
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=1,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=c(1/4,1/2,1,2,3,4)) + #
labs(color="5-year age bands within age groups",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=15),legend.text=element_text(size=13),
legend.position="bottom",plot.caption=element_text(size=13),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
start_date<-as.Date("2021-09-01")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100 # log2
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=1,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=c(1/4,1/3,1/2,1,1.5,2,2.5,3,4)) + #
labs(color="5-year age bands within age groups",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("log2(ratio of weekly rolling sum to a week ago)") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=15),legend.text=element_text(size=13),
legend.position="bottom",plot.caption=element_text(size=13),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
start_date<-as.Date("2021-09-01")
ggplot(eng_case_age_data %>% filter(date>start_date),
aes(x=date,y=(rollingsum_chng),color=factor(age_num),group=age_num)) + # -1)*100 # log2
geom_line(size=1.02) + facet_wrap(~age_categ) + # ,scales="free_y") + #
geom_hline(yintercept=1,linetype="dashed",size=1/2) +
scale_x_date(expand=expansion(0.01,0),breaks="week") + scale_y_continuous(breaks=c(1/4,1/3,1/2,1,1.5,2,2.5,3,4)) + #
labs(color="5-year age bands within age groups",caption=paste0("agegroups: ",gsub("\\], ","\\]\n",agegr_names))) +
xlab("") + ylab("ratio of weekly rolling sum to a week ago") +
theme_bw() + standard_theme + theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),
strip.text=element_text(size=16),legend.title=element_text(size=15),legend.text=element_text(size=13),
legend.position="bottom",plot.caption=element_text(size=13),panel.grid.minor.y=element_blank())
# save
# ggsave(paste0("england_cases_age_4groups_log.png"),width=34,height=22,units="cm")
ggsave(paste0("england_cases_age_4groups_rollingsum_change.png"),width=34,height=22,units="cm")
